//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package mobi.tongari.mokutan;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import com.googlecode.androidannotations.api.BackgroundExecutor;
import mobi.tongari.mokutan.R.id;
import mobi.tongari.mokutan.R.layout;
import mobi.tongari.mokutan.dao.servece.CarName;
import mobi.tongari.mokutan.dao.servece.SekitanRestClient_;
import org.springframework.http.ResponseEntity;

public final class TopActivity_
    extends TopActivity
{

    private Handler handler_ = new Handler();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.activity_top);
    }

    private void init_(Bundle savedInstanceState) {
        sekitanRestClient = new SekitanRestClient_();
    }

    private void afterSetContentView_() {
        {
            View view = findViewById(id.show_ensen_list_button);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        TopActivity_.this.onClickShowEnsenListButton();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.test1_button);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        TopActivity_.this.onClickTest1Button();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.sign_in_button);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        TopActivity_.this.onClickSignInButton();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.show_map_button);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        TopActivity_.this.onClickShowMapButton();
                    }

                }
                );
            }
        }
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    public static TopActivity_.IntentBuilder_ intent(Context context) {
        return new TopActivity_.IntentBuilder_(context);
    }

    @Override
    public void updateCarName(final ResponseEntity<CarName> list) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    TopActivity_.super.updateCarName(list);
                } catch (RuntimeException e) {
                    Log.e("TopActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void updateCarName2(final CarName list) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    TopActivity_.super.updateCarName2(list);
                } catch (RuntimeException e) {
                    Log.e("TopActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void searchCarNamesAsync2() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    TopActivity_.super.searchCarNamesAsync2();
                } catch (RuntimeException e) {
                    Log.e("TopActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void searchCarNamesAsync() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    TopActivity_.super.searchCarNamesAsync();
                } catch (RuntimeException e) {
                    Log.e("TopActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, TopActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public TopActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (context_ instanceof Activity) {
                ((Activity) context_).startActivityForResult(intent_, requestCode);
            } else {
                context_.startActivity(intent_);
            }
        }

    }

}
